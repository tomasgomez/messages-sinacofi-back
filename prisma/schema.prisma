// prisma/schema.prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://sinacofi:hola123@34.135.68.241:5432/message"
}

model CUK {
  id      String  @id @default(uuid())
  cukCode String? @unique

  history History[]

  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  messages   Message[]    @relation(name: "CukMessages")
  parameters Parameters[]
}

model History {
  id      String @id
  cukCode String
  status  String
  date    String

  cuk CUK @relation(fields: [cukCode], references: [cukCode])
}

model Message {
  id           String   @id @default(uuid())
  messageCode  String?
  status       String?
  sender       String?
  creationDate String?
  creationTime String?
  receiver     String?
  receivedDate String?
  receivedTime String?
  actions      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  documents Documents[]

  // Correlatives
  TSN TSN[]
  OSN OSN[]
  NSE NSE[]
  NSR NSR[]
  NSQ NSQ[]

  parameters Parameters[]

  cukCode String?
  cuk     CUK?    @relation(fields: [cukCode], references: [cukCode], name: "CukMessages")
}

// Creado por el usuario cuando esta en estado de PREPARADO 
model TSN {
  id Int @default(autoincrement()) // TODO: setear algunos para la migracion

  institutionCode String
  areaCode        String

  createdAt DateTime @default(now())

  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@id([id, institutionCode, areaCode])
  @@index([id, institutionCode, areaCode])
}

model OSN {
  id        Int      @default(autoincrement())
  createdAt DateTime @default(now())

  institutionCode String

  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@id([id, institutionCode])
  @@index([id, institutionCode])
}

model NSE {
  id        Int      @default(autoincrement())
  createdAt DateTime @default(now())

  institutionCode String
  areaCode        String

  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@id([id, institutionCode, areaCode])
  @@index([id, institutionCode, areaCode])
}

model NSR {
  id        Int      @default(autoincrement())
  createdAt DateTime @default(now())

  institutionCode String
  areaCode        String

  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@id([id, institutionCode, areaCode])
  @@index([id, institutionCode, areaCode])
}

model NSQ {
  id        Int      @default(autoincrement())
  createdAt DateTime @default(now())

  institutionCode String
  areaCode        String

  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@id([id, institutionCode, areaCode])
  @@index([id, institutionCode, areaCode])
}

model Parameters {
  id           String
  name         String
  messageCode  String?
  label        String?
  type         String?
  placeholder  String?
  description  String?
  defaultValue String?
  priority     Int
  value        String? //string or number

  validations String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  messageId String
  Message   Message @relation(fields: [messageId], references: [id])

  cukCode String?
  CUK     CUK?    @relation(fields: [cukCode], references: [cukCode])

  Properties   Properties? @relation(fields: [propertiesId], references: [id])
  propertiesId String?

  @@id([messageId, name, priority])
  @@unique([messageId, name, priority])
  @@index([messageId, name, priority])
}

model Documents {
  id           String   @id @default(uuid())
  documentName String?
  content      String?
  url          String?
  createdAt    DateTime @default(now())

  messageId String
  Message   Message @relation(fields: [messageId], references: [id])
}

model Properties {
  id        String   @id @default(uuid())
  name      String?
  value     String?
  createdAt DateTime @default(now())

  parameters Parameters[]
}

model Family {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())

  institutions String[]
}

model MessageFamily {
  messageId  Int
  familyId   Int
  createdAt  DateTime @default(now())
  assignedAt DateTime @default(now())

  @@id([messageId, familyId])
}
